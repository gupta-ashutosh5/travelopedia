<?php

/**
 * @file
 * Install, update and uninstall functions.
 */

/**
 * Creates Travelopedia SST sitemap.
 */
function tp_xmlsitemap_create_sst_sitemap() {
  // Disable the Travelopedia SST context on any existing sitemaps to start with.
  $sitemaps = xmlsitemap_sitemap_load_multiple(FALSE);
  foreach ($sitemaps as $sitemap) {
    $sitemap->context['tp_sst'] = FALSE;
    xmlsitemap_sitemap_save($sitemap);
  }

  // Create a new sitemap with the Travelopedia SST context enabled.
  $sitemap = new stdClass();
  $sitemap->smid = NULL;
  $context = xmlsitemap_get_current_context();
  $context['tp_sst'] = TRUE;
  $sitemap->context = $context;
  xmlsitemap_sitemap_save($sitemap);

  // List nodes.
  $accepted_node_types = array();
  $nodes = node_type_get_names();
  foreach ($nodes as $key => $node) {
    array_push($accepted_node_types, $key);
  }
  variable_set('tp_xmlsitemap_saved_content_types', $accepted_node_types);

  // List menus.
  if (module_exists('menu')) {
    $excluded_menus = tp_xmlsitemap_get_excluded_menus();

    $menus = menu_get_menus();
    $accepted_menus = array();
    foreach ($menus as $key => $menu) {
      if (!in_array($key, $excluded_menus)) {
        array_push($accepted_menus, $key);
      }
    }

    variable_set('tp_xmlsitemap_saved_menus', $accepted_menus);
  }

  // List Taxonomies.
  if (module_exists('taxonomy')) {
    $taxonomies = taxonomy_vocabulary_get_names();
    $accepted_taxonomies = array();
    foreach ($taxonomies as $key => $taxonomy) {
      array_push($accepted_taxonomies, $key);
    }

    variable_set('tp_xmlsitemap_saved_taxonomies', $accepted_taxonomies);
  }
}

/**
 * Implements hook_install().
 */
function tp_xmlsitemap_install() {
  tp_xmlsitemap_create_sst_sitemap();
}

/**
 * Implements hook_enable().
 */
function tp_xmlsitemap_enable() {
  if (module_exists('menu')) {
    module_enable(array('xmlsitemap_menu'), TRUE);
  }

  if (module_exists('taxonomy')) {
    module_enable(array('xmlsitemap_taxonomy'), TRUE);
  }

  tp_xmlsitemap_index_links();
  tp_xmlsitemap_mark_sitemaps_to_be_regenerated();
  drupal_cron_run();
  tp_xmlsitemap_delete_non_configured_sitemaps();
}

/**
 * Implements hook_uninstall().
 */
function tp_xmlsitemap_uninstall() {
  // Delete the variables.
  db_delete('variable')->condition('name', 'tp_xmlsitemap_%', 'LIKE')->execute();

  // Remove all sitemaps with the Travelopedia SST context enabled.
  $sitemaps = xmlsitemap_sitemap_load_multiple(FALSE);
  foreach ($sitemaps as $sitemap) {
    if (isset($sitemap->context['tp_sst']) && $sitemap->context['tp_sst']) {
      xmlsitemap_sitemap_delete($sitemap->smid);
    }
  }
}

/**
 * Index xmlsitemap links.
 */
function tp_xmlsitemap_update_7100() {
  module_load_include('module', 'tp_xmlsitemap');
  tp_xmlsitemap_index_links();
  drupal_cron_run();
  tp_xmlsitemap_delete_non_configured_sitemaps();
}

/**
 * Re-create Travelopedia SST sitemap, if not exist.
 */
function tp_xmlsitemap_update_7101() {
  module_load_include('module', 'tp_xmlsitemap');

  if (!tp_xmlsitemap_is_sst_sitemap_created()) {
    tp_xmlsitemap_create_sst_sitemap();
    tp_xmlsitemap_index_links();
  }
}

/**
 * Delete and Reindex Travelopedia SST Sitemap.
 */
function tp_xmlsitemap_update_7102() {
  module_load_include('module', 'tp_xmlsitemap');

  if (!tp_xmlsitemap_is_sst_sitemap_created()) {
    tp_xmlsitemap_create_sst_sitemap();
  }

  tp_xmlsitemap_delete_index_links();
  tp_xmlsitemap_index_links();
  tp_xmlsitemap_mark_sitemaps_to_be_regenerated();
}

/**
 * DPT-686: Remove unpublished content from tp_sst sitemap.
 */
function tp_xmlsitemap_update_7103() {
  module_load_include('module', 'tp_xmlsitemap');

  // Reindex Travelopedia SST Sitemap.
  tp_xmlsitemap_delete_index_links();
  tp_xmlsitemap_index_links();
  tp_xmlsitemap_mark_sitemaps_to_be_regenerated();
}

/**
 * Issue #39: Remove unwanted links from default sitemap.
 */
function tp_xmlsitemap_update_7104() {
  module_load_include('module', 'tp_xmlsitemap');

  // Reindex Travelopedia SST Sitemap.
  tp_xmlsitemap_delete_index_links();
  tp_xmlsitemap_index_links();
  tp_xmlsitemap_mark_sitemaps_to_be_regenerated();
}
